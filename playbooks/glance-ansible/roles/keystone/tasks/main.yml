---
- name: Install Keystone dependencies
  apt:
    name:
      - mariadb-server
      - python3-pymysql
      - keystone
      - apache2
      - libapache2-mod-wsgi-py3
      - crudini
    state: present
    update_cache: true

- name: Ensure MariaDB is started and enabled
  systemd:
    name: mariadb
    state: started
    enabled: true

- name: Set MySQL root password if not already set
  shell: >
    mysql -u root -e "SELECT 1;" && \
    mysql -u root -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ mysql_root_pass }}'; FLUSH PRIVILEGES;" || \
    mysql -u root -p"{{ mysql_root_pass }}" -e "SELECT 1;"
  register: mysql_root_password_set
  failed_when: mysql_root_password_set.rc != 0 and 'Access denied' in mysql_root_password_set.stderr
  changed_when: "'ALTER USER' in mysql_root_password_set.stdout"

- name: Create Keystone database
  community.mysql.mysql_db:
    name: keystone
    state: present
    login_user: root
    login_password: "{{ mysql_root_pass }}"

- name: Create Keystone DB user
  community.mysql.mysql_user:
    name: keystone
    password: "{{ keystone_db_pass }}"
    priv: "keystone.*:ALL"
    host: "localhost"
    state: present
    login_user: root
    login_password: "{{ mysql_root_pass }}"

- name: Configure Keystone DB connection
  command: crudini --set /etc/keystone/keystone.conf database connection "mysql+pymysql://keystone:{{ keystone_db_pass }}@localhost/keystone"

- name: Configure Keystone token provider
  command: crudini --set /etc/keystone/keystone.conf token provider fernet

- name: Configure Keystone admin token
  command: crudini --set /etc/keystone/keystone.conf DEFAULT admin_token "{{ admin_token }}"

- name: Run Keystone DB sync
  command: keystone-manage db_sync

- name: Initialize fernet keys
  command: keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone

- name: Initialize credential keys
  command: keystone-manage credential_setup --keystone-user keystone --keystone-group keystone

- name: Bootstrap Keystone
  command: >
    keystone-manage bootstrap
    --bootstrap-password {{ keystone_admin_pass }}
    --bootstrap-admin-url http://{{ controller_host }}:{{ keystone_port }}/v3/
    --bootstrap-internal-url http://{{ controller_host }}:{{ keystone_port }}/v3/
    --bootstrap-public-url http://{{ controller_host }}:{{ keystone_port }}/v3/
    --bootstrap-region-id RegionOne

- name: Ensure Apache listens on Keystone port
  lineinfile:
    path: /etc/apache2/ports.conf
    line: "Listen {{ keystone_port }}"
    state: present

- name: Disable old Keystone site if exists
  shell: a2dissite keystone.conf || true
  ignore_errors: true

- name: Deploy Keystone WSGI Apache config
  template:
    src: wsgi-keystone.conf.j2
    dest: /etc/apache2/sites-available/wsgi-keystone.conf

- name: Enable Keystone site
  command: a2ensite wsgi-keystone.conf

- name: Restart Apache
  systemd:
    name: apache2
    state: restarted
    enabled: true
