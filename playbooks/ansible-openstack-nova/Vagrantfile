# Network configuration - can be overridden with environment variables
controller_ip = ENV['CONTROLLER_IP'] || "192.168.56.10"
compute_ip = ENV['COMPUTE_IP'] || "192.168.56.11"

# Box configuration - can be overridden with environment variables
# For offline usage, you can add a local box with:
# vagrant box add ubuntu2004 file:///path/to/ubuntu2004.box
box_name = ENV['VAGRANT_BOX'] || "generic/ubuntu2004"

Vagrant.configure("2") do |config|
  config.vm.box = box_name
  config.vm.box_check_update = false
  
  # Handle box download errors gracefully
  config.vm.box_download_insecure = false
  
  config.vm.provider :libvirt do |libvirt|
    libvirt.cpus = 2
    libvirt.memory = 4096
    libvirt.uri = 'qemu:///system'
    libvirt.cpu_mode = 'host-passthrough'
    libvirt.nested = true
  end
  
  config.vm.define "controller" do |controller|
    controller.vm.hostname = "controller"
    controller.vm.network :private_network, ip: controller_ip
    controller.vm.provision :ansible do |ansible|
      ansible.playbook = "playbooks/site.yml"
      ansible.inventory_path = "inventory/hosts.ini"
      ansible.limit = "controller"
      ansible.verbose = "v"
      ansible.extra_vars = { ansible_python_interpreter: "/usr/bin/python3" }
    end
  end
  
  config.vm.define "compute" do |compute|
    compute.vm.hostname = "compute"
    compute.vm.network :private_network, ip: compute_ip
    compute.vm.provision :ansible do |ansible|
      ansible.playbook = "playbooks/site.yml"
      ansible.inventory_path = "inventory/hosts.ini"
      ansible.limit = "compute"
      ansible.verbose = "v"
      ansible.extra_vars = { ansible_python_interpreter: "/usr/bin/python3" }
    end
  end
end
