---
- name: Ensure /opt/stack/devstack ownership and permissions
  file:
    path: /opt/stack/devstack
    owner: "{{ stack_user }}"
    group: "{{ stack_user }}"
    mode: '0755'
    recurse: yes

- name: Get Python version
  command: python3 --version
  register: python_version
  changed_when: false

- name: Create DevStack local.conf for non-interactive install
  copy:
    dest: /opt/stack/devstack/local.conf
    content: |
      [[local|localrc]]
      # Passwords
      ADMIN_PASSWORD={{ admin_password }}
      DATABASE_PASSWORD={{ admin_password }}
      RABBIT_PASSWORD={{ admin_password }}
      SERVICE_PASSWORD={{ admin_password }}
      
      # Network configuration
      HOST_IP={{ openstack_host_ip }}
      FIXED_RANGE={{ fixed_range }}
      FLOATING_RANGE={{ floating_range }}
      PUBLIC_NETWORK_GATEWAY={{ public_network_gateway }}
      
      # Enable services
      ENABLED_SERVICES=rabbit,mysql,key,horizon,n-api,n-crt,n-obj,n-cpu,n-cond,n-sch,n-novnc,n-cauth,placement-client,placement-api
      
      # Logging
      LOGFILE=/opt/stack/logs/stack.sh.log
      VERBOSE=True
      
      # Other settings
      RECLONE=yes
      OFFLINE=False
      USE_PYTHON3=True
      PYTHON3_VERSION={{ python_version.stdout.split()[1].split('.')[0] }}.{{ python_version.stdout.split()[1].split('.')[1] }}
    owner: "{{ stack_user }}"
    group: "{{ stack_user }}"
    mode: '0644'
  become: yes

- name: Create logs directory
  file:
    path: /opt/stack/logs
    state: directory
    owner: "{{ stack_user }}"
    group: "{{ stack_user }}"
    mode: '0755'
  become: yes

- name: Run DevStack installer with full logging
  shell: |
    bash /opt/stack/devstack/stack.sh 2>&1 | tee /opt/stack/logs/stack_install.log
  args:
    chdir: /opt/stack/devstack
  become: yes
  become_user: "{{ stack_user }}"
  register: stack_result
  failed_when: stack_result.rc != 0
  changed_when: "'stack.sh completed' in stack_result.stdout or stack_result.rc == 0"
  notify: log_stack_result
