---
- name: Clean up previous installation
  shell: |
    cd /opt/stack/devstack
    ./unstack.sh || true
    ./clean.sh || true
  become: yes
  become_user: "{{ stack_user }}"
  ignore_errors: yes

- name: Ensure /opt/stack/devstack ownership and permissions
  file:
    path: /opt/stack/devstack
    state: directory
    owner: "{{ stack_user }}"
    group: "{{ stack_user }}"
    mode: "0755"
  become: true

- name: Get Python version
  command: python3 --version
  register: python_version
  changed_when: false

- name: Set derived facts for floating IP
  set_fact:
    floating_base: "{{ floating_range.split('/')[0] }}"
    floating_end: "{{ floating_range.split('/')[0].rsplit('.', 1)[0] }}.254"
    floating_subnet: "{{ floating_range.split('/')[0] }}/24"
    python3_short_version: "{{ python_version.stdout.split()[1].split('.')[0] }}.{{ python_version.stdout.split()[1].split('.')[1] }}"

- name: Copy local.conf template
  template:
    src: local.conf.j2
    dest: /opt/stack/devstack/local.conf
    owner: "{{ stack_user }}"
    group: "{{ stack_user }}"
    mode: "0644"

- name: Create logs directory
  file:
    path: /opt/stack/logs
    state: directory
    owner: "{{ stack_user }}"
    group: "{{ stack_user }}"
    mode: "0755"
  become: true

- name: Create pip config directory
  file:
    path: "/home/{{ stack_user }}/.pip"
    state: directory
    owner: "{{ stack_user }}"
    group: "{{ stack_user }}"
    mode: "0755"
  become: true

- name: Set pip timeout and retry settings
  copy:
    dest: "/home/{{ stack_user }}/.pip/pip.conf"
    content: |
      [global]
      timeout = 60
      retries = 3
    owner: "{{ stack_user }}"
    group: "{{ stack_user }}"
    mode: "0644"
  become: true

- name: Run DevStack installation with logging
  shell: |
    cd /opt/stack/devstack
    export PIP_DEFAULT_TIMEOUT=60
    export PIP_RETRIES=3
    ./stack.sh 2>&1 | tee /opt/stack/logs/stack_install.log
  become: yes
  become_user: "{{ stack_user }}"
  args:
    creates: /opt/stack/devstack/.stack
  register: stack_output

- name: Display DevStack installation output
  debug:
    var: stack_output.stdout_lines
  when: stack_output.stdout_lines is defined

- name: Create Swift data directory
  file:
    path: /opt/stack/data/swift
    state: directory
    owner: "{{ stack_user }}"
    group: "{{ stack_user }}"
    mode: "0755"
  become: true
